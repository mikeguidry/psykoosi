/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Assembly Writer Source Fragment                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/* Capstone Disassembly Engine */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013-2014 */

#include <stdio.h>	// debug
#include <inttypes.h>


/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
static void printInstruction(MCInst *MI, SStream *O, MCRegisterInfo *MRI)
{
  static const uint32_t OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    3922U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    3915U,	// BUNDLE
    3932U,	// LIFETIME_START
    3902U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    4099U,	// A
    4136U,	// ADB
    1055535U,	// ADBR
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ADJDYNALLOC
    4181U,	// AEB
    1055654U,	// AEBR
    0U,	// AEXT128_64
    2103147U,	// AFI
    0U,	// AFIMux
    5171U,	// AG
    5044U,	// AGF
    2103157U,	// AGFI
    1056064U,	// AGFR
    3151807U,	// AGHI
    37755006U,	// AGHIK
    1056140U,	// AGR
    171972775U,	// AGRK
    75783U,	// AGSI
    5373U,	// AH
    3151797U,	// AHI
    37755000U,	// AHIK
    0U,	// AHIMux
    0U,	// AHIMuxK
    7893U,	// AHY
    2102639U,	// AIH
    6389U,	// AL
    4247U,	// ALC
    5215U,	// ALCG
    1056152U,	// ALCGR
    1055979U,	// ALCR
    5248925U,	// ALFI
    5248U,	// ALG
    5054U,	// ALGF
    5248897U,	// ALGFI
    1056077U,	// ALGFR
    37755013U,	// ALGHSIK
    1056172U,	// ALGR
    171972781U,	// ALGRK
    37755022U,	// ALHSIK
    1056288U,	// ALR
    171972819U,	// ALRK
    7951U,	// ALY
    1055530U,	// AR
    171972770U,	// ARK
    75778U,	// ASI
    0U,	// ATOMIC_CMP_SWAPW
    0U,	// ATOMIC_LOADW_AFI
    0U,	// ATOMIC_LOADW_AR
    0U,	// ATOMIC_LOADW_MAX
    0U,	// ATOMIC_LOADW_MIN
    0U,	// ATOMIC_LOADW_NILH
    0U,	// ATOMIC_LOADW_NILHi
    0U,	// ATOMIC_LOADW_NR
    0U,	// ATOMIC_LOADW_NRi
    0U,	// ATOMIC_LOADW_OILH
    0U,	// ATOMIC_LOADW_OR
    0U,	// ATOMIC_LOADW_SR
    0U,	// ATOMIC_LOADW_UMAX
    0U,	// ATOMIC_LOADW_UMIN
    0U,	// ATOMIC_LOADW_XILF
    0U,	// ATOMIC_LOADW_XR
    0U,	// ATOMIC_LOAD_AFI
    0U,	// ATOMIC_LOAD_AGFI
    0U,	// ATOMIC_LOAD_AGHI
    0U,	// ATOMIC_LOAD_AGR
    0U,	// ATOMIC_LOAD_AHI
    0U,	// ATOMIC_LOAD_AR
    0U,	// ATOMIC_LOAD_MAX_32
    0U,	// ATOMIC_LOAD_MAX_64
    0U,	// ATOMIC_LOAD_MIN_32
    0U,	// ATOMIC_LOAD_MIN_64
    0U,	// ATOMIC_LOAD_NGR
    0U,	// ATOMIC_LOAD_NGRi
    0U,	// ATOMIC_LOAD_NIHF64
    0U,	// ATOMIC_LOAD_NIHF64i
    0U,	// ATOMIC_LOAD_NIHH64
    0U,	// ATOMIC_LOAD_NIHH64i
    0U,	// ATOMIC_LOAD_NIHL64
    0U,	// ATOMIC_LOAD_NIHL64i
    0U,	// ATOMIC_LOAD_NILF
    0U,	// ATOMIC_LOAD_NILF64
    0U,	// ATOMIC_LOAD_NILF64i
    0U,	// ATOMIC_LOAD_NILFi
    0U,	// ATOMIC_LOAD_NILH
    0U,	// ATOMIC_LOAD_NILH64
    0U,	// ATOMIC_LOAD_NILH64i
    0U,	// ATOMIC_LOAD_NILHi
    0U,	// ATOMIC_LOAD_NILL
    0U,	// ATOMIC_LOAD_NILL64
    0U,	// ATOMIC_LOAD_NILL64i
    0U,	// ATOMIC_LOAD_NILLi
    0U,	// ATOMIC_LOAD_NR
    0U,	// ATOMIC_LOAD_NRi
    0U,	// ATOMIC_LOAD_OGR
    0U,	// ATOMIC_LOAD_OIHF64
    0U,	// ATOMIC_LOAD_OIHH64
    0U,	// ATOMIC_LOAD_OIHL64
    0U,	// ATOMIC_LOAD_OILF
    0U,	// ATOMIC_LOAD_OILF64
    0U,	// ATOMIC_LOAD_OILH
    0U,	// ATOMIC_LOAD_OILH64
    0U,	// ATOMIC_LOAD_OILL
    0U,	// ATOMIC_LOAD_OILL64
    0U,	// ATOMIC_LOAD_OR
    0U,	// ATOMIC_LOAD_SGR
    0U,	// ATOMIC_LOAD_SR
    0U,	// ATOMIC_LOAD_UMAX_32
    0U,	// ATOMIC_LOAD_UMAX_64
    0U,	// ATOMIC_LOAD_UMIN_32
    0U,	// ATOMIC_LOAD_UMIN_64
    0U,	// ATOMIC_LOAD_XGR
    0U,	// ATOMIC_LOAD_XIHF64
    0U,	// ATOMIC_LOAD_XILF
    0U,	// ATOMIC_LOAD_XILF64
    0U,	// ATOMIC_LOAD_XR
    0U,	// ATOMIC_SWAPW
    0U,	// ATOMIC_SWAP_32
    0U,	// ATOMIC_SWAP_64
    1055863U,	// AXBR
    7856U,	// AY
    6438111U,	// AsmBCR
    209077U,	// AsmBRC
    211206U,	// AsmBRCL
    74455111U,	// AsmCGIJ
    306190431U,	// AsmCGRJ
    74455106U,	// AsmCIJ
    75503693U,	// AsmCLGIJ
    306190437U,	// AsmCLGRJ
    75503700U,	// AsmCLIJ
    306190444U,	// AsmCLRJ
    306190426U,	// AsmCRJ
    269589U,	// AsmEBR
    16886U,	// AsmEJ
    16626U,	// AsmEJG
    9441494U,	// AsmELOC
    9441507U,	// AsmELOCG
    1053607U,	// AsmELOCGR
    1053600U,	// AsmELOCR
    10490076U,	// AsmESTOC
    10490090U,	// AsmESTOCG
    269819U,	// AsmHBR
    269594U,	// AsmHEBR
    16671U,	// AsmHEJ
    16663U,	// AsmHEJG
    9441527U,	// AsmHELOC
    9441542U,	// AsmHELOCG
    1053163U,	// AsmHELOCGR
    1053155U,	// AsmHELOCR
    10490110U,	// AsmHESTOC
    10490126U,	// AsmHESTOCG
    17793U,	// AsmHJ
    17721U,	// AsmHJG
    9442572U,	// AsmHLOC
    9442602U,	// AsmHLOCG
    1054554U,	// AsmHLOCGR
    1054547U,	// AsmHLOCR
    10491154U,	// AsmHSTOC
    10491185U,	// AsmHSTOCG
    108009076U,	// AsmJEAltCGI
    440407704U,	// AsmJEAltCGR
    108009068U,	// AsmJEAltCI
    109057661U,	// AsmJEAltCLGI
    440407713U,	// AsmJEAltCLGR
    109057671U,	// AsmJEAltCLI
    440407723U,	// AsmJEAltCLR
    440407696U,	// AsmJEAltCR
    108007930U,	// AsmJECGI
    440406550U,	// AsmJECGR
    108007924U,	// AsmJECI
    109056513U,	// AsmJECLGI
    440406557U,	// AsmJECLGR
    109056521U,	// AsmJECLI
    440406565U,	// AsmJECLR
    440406544U,	// AsmJECR
    108008133U,	// AsmJHAltCGI
    440406761U,	// AsmJHAltCGR
    108008125U,	// AsmJHAltCI
    109056718U,	// AsmJHAltCLGI
    440406770U,	// AsmJHAltCLGR
    109056728U,	// AsmJHAltCLI
    440406780U,	// AsmJHAltCLR
    440406753U,	// AsmJHAltCR
    108008837U,	// AsmJHCGI
    440407457U,	// AsmJHCGR
    108008831U,	// AsmJHCI
    109057420U,	// AsmJHCLGI
    440407464U,	// AsmJHCLGR
    109057428U,	// AsmJHCLI
    440407472U,	// AsmJHCLR
    440407451U,	// AsmJHCR
    108009937U,	// AsmJHEAltCGI
    440408561U,	// AsmJHEAltCGR
    108009930U,	// AsmJHEAltCI
    109058521U,	// AsmJHEAltCLGI
    440408569U,	// AsmJHEAltCLGR
    109058530U,	// AsmJHEAltCLI
    440408578U,	// AsmJHEAltCLR
    440408554U,	// AsmJHEAltCR
    108007716U,	// AsmJHECGI
    440406340U,	// AsmJHECGR
    108007709U,	// AsmJHECI
    109056300U,	// AsmJHECLGI
    440406348U,	// AsmJHECLGR
    109056309U,	// AsmJHECLI
    440406357U,	// AsmJHECLR
    440406333U,	// AsmJHECR
    108007824U,	// AsmJLAltCGI
    440406452U,	// AsmJLAltCGR
    108007816U,	// AsmJLAltCI
    109056409U,	// AsmJLAltCLGI
    440406461U,	// AsmJLAltCLGR
    109056419U,	// AsmJLAltCLI
    440406471U,	// AsmJLAltCLR
    440406444U,	// AsmJLAltCR
    108009801U,	// AsmJLCGI
    440408421U,	// AsmJLCGR
    108009795U,	// AsmJLCI
    109058384U,	// AsmJLCLGI
    440408428U,	// AsmJLCLGR
    109058392U,	// AsmJLCLI
    440408436U,	// AsmJLCLR
    440408415U,	// AsmJLCR
    108009225U,	// AsmJLEAltCGI
    440407849U,	// AsmJLEAltCGR
    108009218U,	// AsmJLEAltCI
    109057809U,	// AsmJLEAltCLGI
    440407857U,	// AsmJLEAltCLGR
    109057818U,	// AsmJLEAltCLI
    440407866U,	// AsmJLEAltCLR
    440407842U,	// AsmJLEAltCR
    108008025U,	// AsmJLECGI
    440406649U,	// AsmJLECGR
    108008018U,	// AsmJLECI
    109056609U,	// AsmJLECLGI
    440406657U,	// AsmJLECLGR
    109056618U,	// AsmJLECLI
    440406666U,	// AsmJLECLR
    440406642U,	// AsmJLECR
    108008278U,	// AsmJLHAltCGI
    440406902U,	// AsmJLHAltCGR
    108008271U,	// AsmJLHAltCI
    109056862U,	// AsmJLHAltCLGI
    440406910U,	// AsmJLHAltCLGR
    109056871U,	// AsmJLHAltCLI
    440406919U,	// AsmJLHAltCLR
    440406895U,	// AsmJLHAltCR
    108008957U,	// AsmJLHCGI
    440407581U,	// AsmJLHCGR
    108008950U,	// AsmJLHCI
    109057541U,	// AsmJLHCLGI
    440407589U,	// AsmJLHCLGR
    109057550U,	// AsmJLHCLI
    440407598U,	// AsmJLHCLR
    440407574U,	// AsmJLHCR
    269861U,	// AsmLBR
    269607U,	// AsmLEBR
    16980U,	// AsmLEJ
    16972U,	// AsmLEJG
    9441836U,	// AsmLELOC
    9441851U,	// AsmLELOCG
    1053472U,	// AsmLELOCGR
    1053464U,	// AsmLELOCR
    10490419U,	// AsmLESTOC
    10490435U,	// AsmLESTOCG
    269831U,	// AsmLHBR
    17912U,	// AsmLHJ
    17879U,	// AsmLHJG
    9442743U,	// AsmLHLOC
    9442758U,	// AsmLHLOCG
    1054415U,	// AsmLHLOCGR
    1054407U,	// AsmLHLOCR
    10491326U,	// AsmLHSTOC
    10491342U,	// AsmLHSTOCG
    18757U,	// AsmLJ
    18719U,	// AsmLJG
    9443577U,	// AsmLLOC
    9443600U,	// AsmLLOCG
    1055302U,	// AsmLLOCGR
    1055265U,	// AsmLLOCR
    579866794U,	// AsmLOC
    579867749U,	// AsmLOCG
    705699231U,	// AsmLOCGR
    705699063U,	// AsmLOCR
    10492159U,	// AsmLSTOC
    10492183U,	// AsmLSTOCG
    269620U,	// AsmNEBR
    17233U,	// AsmNEJ
    17225U,	// AsmNEJG
    9442089U,	// AsmNELOC
    9442104U,	// AsmNELOCG
    1053591U,	// AsmNELOCGR
    1053583U,	// AsmNELOCR
    10490672U,	// AsmNESTOC
    10490688U,	// AsmNESTOCG
    269850U,	// AsmNHBR
    269600U,	// AsmNHEBR
    16778U,	// AsmNHEJ
    16769U,	// AsmNHEJG
    9441629U,	// AsmNHELOC
    9441646U,	// AsmNHELOCG
    1053145U,	// AsmNHELOCGR
    1053136U,	// AsmNHELOCR
    10490213U,	// AsmNHESTOC
    10490231U,	// AsmNHESTOCG
    18180U,	// AsmNHJ
    18172U,	// AsmNHJG
    9443036U,	// AsmNHLOC
    9443051U,	// AsmNHLOCG
    1054538U,	// AsmNHLOCGR
    1054530U,	// AsmNHLOCR
    10491619U,	// AsmNHSTOC
    10491635U,	// AsmNHSTOCG
    269876U,	// AsmNLBR
    269613U,	// AsmNLEBR
    17087U,	// AsmNLEJ
    17078U,	// AsmNLEJG
    9441938U,	// AsmNLELOC
    9441955U,	// AsmNLELOCG
    1053454U,	// AsmNLELOCGR
    1053445U,	// AsmNLELOCR
    10490522U,	// AsmNLESTOC
    10490540U,	// AsmNLESTOCG
    269843U,	// AsmNLHBR
    18030U,	// AsmNLHJ
    18021U,	// AsmNLHJG
    9442881U,	// AsmNLHLOC
    9442898U,	// AsmNLHLOCG
    1054397U,	// AsmNLHLOCGR
    1054388U,	// AsmNLHLOCR
    10491465U,	// AsmNLHSTOC
    10491483U,	// AsmNLHSTOCG
    18892U,	// AsmNLJ
    18884U,	// AsmNLJG
    9443748U,	// AsmNLLOC
    9443763U,	// AsmNLLOCG
    1055250U,	// AsmNLLOCGR
    1055242U,	// AsmNLLOCR
    10492331U,	// AsmNLSTOC
    10492347U,	// AsmNLSTOCG
    269897U,	// AsmNOBR
    19204U,	// AsmNOJ
    19198U,	// AsmNOJG
    9444062U,	// AsmNOLOC
    9444077U,	// AsmNOLOCG
    1055505U,	// AsmNOLOCGR
    1055497U,	// AsmNOLOCR
    10492645U,	// AsmNOSTOC
    10492661U,	// AsmNOSTOCG
    269892U,	// AsmOBR
    19162U,	// AsmOJ
    19157U,	// AsmOJG
    9444025U,	// AsmOLOC
    9444038U,	// AsmOLOCG
    1055521U,	// AsmOLOCGR
    1055514U,	// AsmOLOCR
    10492607U,	// AsmOSTOC
    10492621U,	// AsmOSTOCG
    715133103U,	// AsmSTOC
    715134059U,	// AsmSTOCG
    4202068U,	// BASR
    269105U,	// BR
    11542133U,	// BRAS
    11541151U,	// BRASL
    24452U,	// BRC
    24447U,	// BRCL
    12590723U,	// BRCT
    12588249U,	// BRCTG
    13635728U,	// C
    13635629U,	// CDB
    4201270U,	// CDBR
    4201495U,	// CDFBR
    4201540U,	// CDGBR
    719330341U,	// CDLFBR
    719330386U,	// CDLGBR
    13635674U,	// CEB
    4201389U,	// CEBR
    4201502U,	// CEFBR
    4201547U,	// CEGBR
    719330349U,	// CELFBR
    719330394U,	// CELGBR
    14687049U,	// CFDBR
    14687176U,	// CFEBR
    15734640U,	// CFI
    0U,	// CFIMux
    14687378U,	// CFXBR
    13636705U,	// CG
    14687064U,	// CGDBR
    14687191U,	// CGEBR
    13636537U,	// CGF
    15734651U,	// CGFI
    4201799U,	// CGFR
    11541039U,	// CGFRL
    13636908U,	// CGH
    16783301U,	// CGHI
    11541090U,	// CGHRL
    337947U,	// CGHSI
    421766U,	// CGIJ
    4201882U,	// CGR
    17985434U,	// CGRJ
    11541064U,	// CGRL
    14687393U,	// CGXBR
    13636872U,	// CH
    13636584U,	// CHF
    337962U,	// CHHSI
    16783290U,	// CHI
    11541084U,	// CHRL
    337933U,	// CHSI
    13639386U,	// CHY
    15734132U,	// CIH
    421762U,	// CIJ
    13637883U,	// CL
    28828U,	// CLC
    0U,	// CLCLoop
    0U,	// CLCSequence
    719330128U,	// CLFDBR
    719330255U,	// CLFEBR
    469011U,	// CLFHSI
    18880419U,	// CLFI
    0U,	// CLFIMux
    719330457U,	// CLFXBR
    13636749U,	// CLG
    719330143U,	// CLGDBR
    719330270U,	// CLGEBR
    13636548U,	// CLGF
    18880392U,	// CLGFI
    4201812U,	// CLGFR
    11541046U,	// CLGFRL
    11541097U,	// CLGHRL
    469026U,	// CLGHSI
    552843U,	// CLGIJ
    4201906U,	// CLGR
    17985439U,	// CLGRJ
    11541070U,	// CLGRL
    719330472U,	// CLGXBR
    13636620U,	// CLHF
    469041U,	// CLHHSI
    11541113U,	// CLHRL
    600053U,	// CLI
    18879865U,	// CLIH
    552849U,	// CLIJ
    601844U,	// CLIY
    0U,	// CLMux
    4202026U,	// CLR
    17985445U,	// CLRJ
    11541134U,	// CLRL
    4202125U,	// CLST
    0U,	// CLSTLoop
    13639444U,	// CLY
    0U,	// CMux
    171973896U,	// CPSDRdd
    171973896U,	// CPSDRds
    171973896U,	// CPSDRsd
    171973896U,	// CPSDRss
    4201696U,	// CR
    17985430U,	// CRJ
    11541027U,	// CRL
    839917179U,	// CS
    839914698U,	// CSG
    839917355U,	// CSY
    4201598U,	// CXBR
    4201533U,	// CXFBR
    4201578U,	// CXGBR
    719330357U,	// CXLFBR
    719330402U,	// CXLGBR
    13639349U,	// CY
    0U,	// CallBASR
    0U,	// CallBR
    0U,	// CallBRASL
    0U,	// CallJG
    0U,	// CondStore16
    0U,	// CondStore16Inv
    0U,	// CondStore16Mux
    0U,	// CondStore16MuxInv
    0U,	// CondStore32
    0U,	// CondStore32Inv
    0U,	// CondStore64
    0U,	// CondStore64Inv
    0U,	// CondStore8
    0U,	// CondStore8Inv
    0U,	// CondStore8Mux
    0U,	// CondStore8MuxInv
    0U,	// CondStoreF32
    0U,	// CondStoreF32Inv
    0U,	// CondStoreF64
    0U,	// CondStoreF64Inv
    4146U,	// DDB
    1055548U,	// DDBR
    4192U,	// DEB
    1055668U,	// DEBR
    6412U,	// DL
    5266U,	// DLG
    1056184U,	// DLGR
    1056303U,	// DLR
    5327U,	// DSG
    5078U,	// DSGF
    1056119U,	// DSGFR
    1056221U,	// DSGR
    1055877U,	// DXBR
    19929897U,	// EAR
    14687079U,	// FIDBR
    719327242U,	// FIDBRA
    14687206U,	// FIEBR
    719327250U,	// FIEBRA
    14687408U,	// FIXBR
    719327258U,	// FIXBRA
    4201936U,	// FLOGR
    4243U,	// IC
    4243U,	// IC32
    7860U,	// IC32Y
    7860U,	// ICY
    0U,	// IIFMux
    18879469U,	// IIHF
    0U,	// IIHF64
    20976964U,	// IIHH
    0U,	// IIHH64
    20977956U,	// IIHL
    0U,	// IIHL64
    0U,	// IIHMux
    18879506U,	// IILF
    0U,	// IILF64
    20977117U,	// IILH
    0U,	// IILH64
    20978043U,	// IILL
    0U,	// IILL64
    0U,	// IILMux
    268966U,	// IPM
    18500U,	// J
    17530U,	// JG
    13637878U,	// L
    0U,	// L128
    13635590U,	// LA
    977276929U,	// LAA
    977278001U,	// LAAG
    977279219U,	// LAAL
    977278078U,	// LAALG
    977279663U,	// LAN
    977278142U,	// LANG
    977279668U,	// LAO
    977278148U,	// LAOG
    11541019U,	// LARL
    977280682U,	// LAX
    977278199U,	// LAXG
    13639343U,	// LAY
    13635721U,	// LB
    13636865U,	// LBH
    0U,	// LBMux
    4201586U,	// LBR
    4201269U,	// LCDBR
    4201388U,	// LCEBR
    4201798U,	// LCGFR
    4201881U,	// LCGR
    4201708U,	// LCR
    4201597U,	// LCXBR
    13635789U,	// LD
    13635679U,	// LDEB
    4201395U,	// LDEBR
    4201894U,	// LDGR
    4201731U,	// LDR
    4201604U,	// LDXBR
    13639359U,	// LDY
    13636143U,	// LE
    4201282U,	// LEDBR
    4201768U,	// LER
    4201611U,	// LEXBR
    13639370U,	// LEY
    13636895U,	// LFH
    13636737U,	// LG
    13635715U,	// LGB
    4201556U,	// LGBR
    4201725U,	// LGDR
    13636543U,	// LGF
    15734658U,	// LGFI
    4201806U,	// LGFR
    11541047U,	// LGFRL
    13636927U,	// LGH
    16783307U,	// LGHI
    4201985U,	// LGHR
    11541098U,	// LGHRL
    4201901U,	// LGR
    11541071U,	// LGRL
    13637050U,	// LH
    13636958U,	// LHH
    16783333U,	// LHI
    0U,	// LHIMux
    0U,	// LHMux
    4201992U,	// LHR
    11541114U,	// LHRL
    13639391U,	// LHY
    13635745U,	// LLC
    13636870U,	// LLCH
    0U,	// LLCMux
    4201713U,	// LLCR
    0U,	// LLCRMux
    13635725U,	// LLGC
    4201700U,	// LLGCR
    13636554U,	// LLGF
    4201819U,	// LLGFR
    11541054U,	// LLGFRL
    13636926U,	// LLGH
    4201984U,	// LLGHR
    11541105U,	// LLGHRL
    13637174U,	// LLH
    13636957U,	// LLHH
    0U,	// LLHMux
    4201997U,	// LLHR
    11541120U,	// LLHRL
    0U,	// LLHRMux
    18879475U,	// LLIHF
    22025546U,	// LLIHH
    22026538U,	// LLIHL
    18879512U,	// LLILF
    22025699U,	// LLILH
    22026625U,	// LLILL
    977278131U,	// LMG
    0U,	// LMux
    4201332U,	// LNDBR
    4201453U,	// LNEBR
    4201833U,	// LNGFR
    4201930U,	// LNGR
    4202047U,	// LNR
    4201661U,	// LNXBR
    36715U,	// LOC
    36724U,	// LOCG
    40879U,	// LOCGR
    40874U,	// LOCR
    4201339U,	// LPDBR
    4201460U,	// LPEBR
    4201840U,	// LPGFR
    4201943U,	// LPGR
    4202063U,	// LPR
    4201668U,	// LPXBR
    4202017U,	// LR
    11541135U,	// LRL
    0U,	// LRMux
    13639327U,	// LRV
    13636842U,	// LRVG
    4201967U,	// LRVGR
    4202084U,	// LRVR
    13639305U,	// LT
    4201360U,	// LTDBR
    4201360U,	// LTDBRCompare
    4201481U,	// LTEBR
    4201481U,	// LTEBRCompare
    13636832U,	// LTG
    13636578U,	// LTGF
    4201861U,	// LTGFR
    4201961U,	// LTGR
    4202079U,	// LTR
    4201688U,	// LTXBR
    4201688U,	// LTXBRCompare
    0U,	// LX
    13635656U,	// LXDB
    4201367U,	// LXDBR
    13635709U,	// LXEB
    4201488U,	// LXEBR
    4202090U,	// LXR
    13639440U,	// LY
    269583U,	// LZDR
    269626U,	// LZER
    269935U,	// LZXR
    1108348967U,	// MADB
    1242569518U,	// MADBR
    1108349012U,	// MAEB
    1242569637U,	// MAEBR
    4151U,	// MDB
    1055598U,	// MDBR
    4197U,	// MDEB
    1055674U,	// MDEBR
    4203U,	// MEEB
    1055681U,	// MEEBR
    3151825U,	// MGHI
    5848U,	// MH
    3151850U,	// MHI
    7908U,	// MHY
    5283U,	// MLG
    1056190U,	// MLGR
    7807U,	// MS
    1108348994U,	// MSDB
    1242569609U,	// MSDBR
    1108349047U,	// MSEB
    1242569730U,	// MSEBR
    2103215U,	// MSFI
    5332U,	// MSG
    5084U,	// MSGF
    2103190U,	// MSGFI
    1056126U,	// MSGFR
    1056227U,	// MSGR
    1056346U,	// MSR
    7984U,	// MSY
    28863U,	// MVC
    0U,	// MVCLoop
    0U,	// MVCSequence
    337879U,	// MVGHI
    337886U,	// MVHHI
    337903U,	// MVHI
    600121U,	// MVI
    601860U,	// MVIY
    4202137U,	// MVST
    0U,	// MVSTLoop
    1055927U,	// MXBR
    4174U,	// MXDB
    1055646U,	// MXDBR
    6833U,	// N
    28838U,	// NC
    0U,	// NCLoop
    0U,	// NCSequence
    5312U,	// NG
    1056203U,	// NGR
    171972795U,	// NGRK
    600058U,	// NI
    0U,	// NIFMux
    5247994U,	// NIHF
    0U,	// NIHF64
    20976977U,	// NIHH
    0U,	// NIHH64
    20977969U,	// NIHL
    0U,	// NIHL64
    0U,	// NIHMux
    5248031U,	// NILF
    0U,	// NILF64
    20977130U,	// NILH
    0U,	// NILH64
    20978056U,	// NILL
    0U,	// NILL64
    0U,	// NILMux
    601850U,	// NIY
    1056320U,	// NR
    171972831U,	// NRK
    7971U,	// NY
    6838U,	// O
    28843U,	// OC
    0U,	// OCLoop
    0U,	// OCSequence
    5318U,	// OG
    1056210U,	// OGR
    171972801U,	// OGRK
    600062U,	// OI
    0U,	// OIFMux
    5248000U,	// OIHF
    0U,	// OIHF64
    20976983U,	// OIHH
    0U,	// OIHH64
    20977975U,	// OIHL
    0U,	// OIHL64
    0U,	// OIHMux
    5248037U,	// OILF
    0U,	// OILF64
    20977136U,	// OILH
    0U,	// OILH64
    20978062U,	// OILL
    0U,	// OILL64
    0U,	// OILMux
    601855U,	// OIY
    1056325U,	// OR
    171972836U,	// ORK
    7975U,	// OY
    667848U,	// PFD
    211496U,	// PFDRL
    1376785475U,	// RISBG
    1376785475U,	// RISBG32
    1376785522U,	// RISBHG
    0U,	// RISBHH
    0U,	// RISBHL
    1376785541U,	// RISBLG
    0U,	// RISBLH
    0U,	// RISBLL
    0U,	// RISBMux
    977279386U,	// RLL
    977278103U,	// RLLG
    1376785482U,	// RNSBG
    1376785489U,	// ROSBG
    1376785496U,	// RXSBG
    0U,	// Return
    7800U,	// S
    4163U,	// SDB
    1055626U,	// SDBR
    4216U,	// SEB
    1055747U,	// SEBR
    5323U,	// SG
    5079U,	// SGF
    1056120U,	// SGFR
    1056222U,	// SGR
    171972807U,	// SGRK
    5986U,	// SH
    7913U,	// SHY
    6818U,	// SL
    4232U,	// SLB
    5181U,	// SLBG
    1055857U,	// SLBR
    5248937U,	// SLFI
    5294U,	// SLG
    1056145U,	// SLGBR
    5072U,	// SLGF
    5248911U,	// SLGFI
    1056098U,	// SLGFR
    1056196U,	// SLGR
    171972788U,	// SLGRK
    9443743U,	// SLL
    977278109U,	// SLLG
    977279126U,	// SLLK
    1056314U,	// SLR
    171972825U,	// SLRK
    7961U,	// SLY
    13635644U,	// SQDB
    4201346U,	// SQDBR
    13635697U,	// SQEB
    4201467U,	// SQEBR
    4201675U,	// SQXBR
    1056342U,	// SR
    9441314U,	// SRA
    977278007U,	// SRAG
    977279090U,	// SRAK
    171972841U,	// SRK
    9443988U,	// SRL
    977278120U,	// SRLG
    977279132U,	// SRLK
    4202131U,	// SRST
    0U,	// SRSTLoop
    13639311U,	// ST
    0U,	// ST128
    13635770U,	// STC
    13636889U,	// STCH
    0U,	// STCMux
    13639353U,	// STCY
    13635793U,	// STD
    13639364U,	// STDY
    13636527U,	// STE
    13639375U,	// STEY
    13636900U,	// STFH
    13636837U,	// STG
    11541077U,	// STGRL
    13637478U,	// STH
    13636969U,	// STHH
    0U,	// STHMux
    11541127U,	// STHRL
    13639406U,	// STHY
    977278136U,	// STMG
    0U,	// STMux
    44911U,	// STOC
    44921U,	// STOCG
    11541145U,	// STRL
    13639332U,	// STRV
    13636848U,	// STRVG
    0U,	// STX
    13639477U,	// STY
    1055954U,	// SXBR
    7980U,	// SY
    0U,	// Select32
    0U,	// Select32Mux
    0U,	// Select64
    0U,	// SelectF128
    0U,	// SelectF32
    0U,	// SelectF64
    0U,	// Serialize
    600747U,	// TM
    22025571U,	// TMHH
    0U,	// TMHH64
    22026557U,	// TMHL
    0U,	// TMHL64
    0U,	// TMHMux
    22025787U,	// TMLH
    0U,	// TMLH64
    22026644U,	// TMLL
    0U,	// TMLL64
    0U,	// TMLMux
    601886U,	// TMY
    7852U,	// X
    28868U,	// XC
    0U,	// XCLoop
    0U,	// XCSequence
    5369U,	// XG
    1056246U,	// XGR
    171972813U,	// XGRK
    600126U,	// XI
    0U,	// XIFMux
    5248006U,	// XIHF
    0U,	// XIHF64
    5248043U,	// XILF
    0U,	// XILF64
    601866U,	// XIY
    1056363U,	// XR
    171972846U,	// XRK
    7994U,	// XY
    0U,	// ZEXT128_32
    0U,	// ZEXT128_64
    0U
  };

#ifndef CAPSTONE_DIET
  static char AsmStrs[] = {
  /* 0 */ 'l', 'a', 'a', 9, 0,
  /* 5 */ 'l', 'a', 9, 0,
  /* 9 */ 'f', 'i', 'd', 'b', 'r', 'a', 9, 0,
  /* 17 */ 'f', 'i', 'e', 'b', 'r', 'a', 9, 0,
  /* 25 */ 'f', 'i', 'x', 'b', 'r', 'a', 9, 0,
  /* 33 */ 's', 'r', 'a', 9, 0,
  /* 38 */ 'm', 'a', 'd', 'b', 9, 0,
  /* 44 */ 'c', 'd', 'b', 9, 0,
  /* 49 */ 'd', 'd', 'b', 9, 0,
  /* 54 */ 'm', 'd', 'b', 9, 0,
  /* 59 */ 's', 'q', 'd', 'b', 9, 0,
  /* 65 */ 'm', 's', 'd', 'b', 9, 0,
  /* 71 */ 'l', 'x', 'd', 'b', 9, 0,
  /* 77 */ 'm', 'x', 'd', 'b', 9, 0,
  /* 83 */ 'm', 'a', 'e', 'b', 9, 0,
  /* 89 */ 'c', 'e', 'b', 9, 0,
  /* 94 */ 'l', 'd', 'e', 'b', 9, 0,
  /* 100 */ 'm', 'd', 'e', 'b', 9, 0,
  /* 106 */ 'm', 'e', 'e', 'b', 9, 0,
  /* 112 */ 's', 'q', 'e', 'b', 9, 0,
  /* 118 */ 'm', 's', 'e', 'b', 9, 0,
  /* 124 */ 'l', 'x', 'e', 'b', 9, 0,
  /* 130 */ 'l', 'g', 'b', 9, 0,
  /* 135 */ 's', 'l', 'b', 9, 0,
  /* 140 */ 'l', 'l', 'g', 'c', 9, 0,
  /* 146 */ 'i', 'c', 9, 0,
  /* 150 */ 'a', 'l', 'c', 9, 0,
  /* 155 */ 'c', 'l', 'c', 9, 0,
  /* 160 */ 'l', 'l', 'c', 9, 0,
  /* 165 */ 'n', 'c', 9, 0,
  /* 169 */ 'l', 'o', 'c', 9, 0,
  /* 174 */ 's', 't', 'o', 'c', 9, 0,
  /* 180 */ 'b', 'r', 'c', 9, 0,
  /* 185 */ 's', 't', 'c', 9, 0,
  /* 190 */ 'm', 'v', 'c', 9, 0,
  /* 195 */ 'x', 'c', 9, 0,
  /* 199 */ 'p', 'f', 'd', 9, 0,
  /* 204 */ 'l', 'd', 9, 0,
  /* 208 */ 's', 't', 'd', 9, 0,
  /* 213 */ 'l', 'o', 'c', 'e', 9, 0,
  /* 219 */ 's', 't', 'o', 'c', 'e', 9, 0,
  /* 226 */ 'l', 'o', 'c', 'g', 'e', 9, 0,
  /* 233 */ 's', 't', 'o', 'c', 'g', 'e', 9, 0,
  /* 241 */ 'j', 'g', 'e', 9, 0,
  /* 246 */ 'l', 'o', 'c', 'h', 'e', 9, 0,
  /* 253 */ 's', 't', 'o', 'c', 'h', 'e', 9, 0,
  /* 261 */ 'l', 'o', 'c', 'g', 'h', 'e', 9, 0,
  /* 269 */ 's', 't', 'o', 'c', 'g', 'h', 'e', 9, 0,
  /* 278 */ 'j', 'g', 'h', 'e', 9, 0,
  /* 284 */ 'c', 'i', 'j', 'h', 'e', 9, 0,
  /* 291 */ 'c', 'g', 'i', 'j', 'h', 'e', 9, 0,
  /* 299 */ 'c', 'l', 'g', 'i', 'j', 'h', 'e', 9, 0,
  /* 308 */ 'c', 'l', 'i', 'j', 'h', 'e', 9, 0,
  /* 316 */ 'c', 'r', 'j', 'h', 'e', 9, 0,
  /* 323 */ 'c', 'g', 'r', 'j', 'h', 'e', 9, 0,
  /* 331 */ 'c', 'l', 'g', 'r', 'j', 'h', 'e', 9, 0,
  /* 340 */ 'c', 'l', 'r', 'j', 'h', 'e', 9, 0,
  /* 348 */ 'l', 'o', 'c', 'n', 'h', 'e', 9, 0,
  /* 356 */ 's', 't', 'o', 'c', 'n', 'h', 'e', 9, 0,
  /* 365 */ 'l', 'o', 'c', 'g', 'n', 'h', 'e', 9, 0,
  /* 374 */ 's', 't', 'o', 'c', 'g', 'n', 'h', 'e', 9, 0,
  /* 384 */ 'j', 'g', 'n', 'h', 'e', 9, 0,
  /* 391 */ 'c', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 399 */ 'c', 'g', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 408 */ 'c', 'l', 'g', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 418 */ 'c', 'l', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 427 */ 'c', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 435 */ 'c', 'g', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 444 */ 'c', 'l', 'g', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 454 */ 'c', 'l', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 463 */ 'l', 'o', 'c', 'r', 'n', 'h', 'e', 9, 0,
  /* 472 */ 'l', 'o', 'c', 'g', 'r', 'n', 'h', 'e', 9, 0,
  /* 482 */ 'l', 'o', 'c', 'r', 'h', 'e', 9, 0,
  /* 490 */ 'l', 'o', 'c', 'g', 'r', 'h', 'e', 9, 0,
  /* 499 */ 'c', 'i', 'j', 'e', 9, 0,
  /* 505 */ 'c', 'g', 'i', 'j', 'e', 9, 0,
  /* 512 */ 'c', 'l', 'g', 'i', 'j', 'e', 9, 0,
  /* 520 */ 'c', 'l', 'i', 'j', 'e', 9, 0,
  /* 527 */ 'c', 'r', 'j', 'e', 9, 0,
  /* 533 */ 'c', 'g', 'r', 'j', 'e', 9, 0,
  /* 540 */ 'c', 'l', 'g', 'r', 'j', 'e', 9, 0,
  /* 548 */ 'c', 'l', 'r', 'j', 'e', 9, 0,
  /* 555 */ 'l', 'o', 'c', 'l', 'e', 9, 0,
  /* 562 */ 's', 't', 'o', 'c', 'l', 'e', 9, 0,
  /* 570 */ 'l', 'o', 'c', 'g', 'l', 'e', 9, 0,
  /* 578 */ 's', 't', 'o', 'c', 'g', 'l', 'e', 9, 0,
  /* 587 */ 'j', 'g', 'l', 'e', 9, 0,
  /* 593 */ 'c', 'i', 'j', 'l', 'e', 9, 0,
  /* 600 */ 'c', 'g', 'i', 'j', 'l', 'e', 9, 0,
  /* 608 */ 'c', 'l', 'g', 'i', 'j', 'l', 'e', 9, 0,
  /* 617 */ 'c', 'l', 'i', 'j', 'l', 'e', 9, 0,
  /* 625 */ 'c', 'r', 'j', 'l', 'e', 9, 0,
  /* 632 */ 'c', 'g', 'r', 'j', 'l', 'e', 9, 0,
  /* 640 */ 'c', 'l', 'g', 'r', 'j', 'l', 'e', 9, 0,
  /* 649 */ 'c', 'l', 'r', 'j', 'l', 'e', 9, 0,
  /* 657 */ 'l', 'o', 'c', 'n', 'l', 'e', 9, 0,
  /* 665 */ 's', 't', 'o', 'c', 'n', 'l', 'e', 9, 0,
  /* 674 */ 'l', 'o', 'c', 'g', 'n', 'l', 'e', 9, 0,
  /* 683 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 'e', 9, 0,
  /* 693 */ 'j', 'g', 'n', 'l', 'e', 9, 0,
  /* 700 */ 'c', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 708 */ 'c', 'g', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 717 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 727 */ 'c', 'l', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 736 */ 'c', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 744 */ 'c', 'g', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 753 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 763 */ 'c', 'l', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 772 */ 'l', 'o', 'c', 'r', 'n', 'l', 'e', 9, 0,
  /* 781 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 'e', 9, 0,
  /* 791 */ 'l', 'o', 'c', 'r', 'l', 'e', 9, 0,
  /* 799 */ 'l', 'o', 'c', 'g', 'r', 'l', 'e', 9, 0,
  /* 808 */ 'l', 'o', 'c', 'n', 'e', 9, 0,
  /* 815 */ 's', 't', 'o', 'c', 'n', 'e', 9, 0,
  /* 823 */ 'l', 'o', 'c', 'g', 'n', 'e', 9, 0,
  /* 831 */ 's', 't', 'o', 'c', 'g', 'n', 'e', 9, 0,
  /* 840 */ 'j', 'g', 'n', 'e', 9, 0,
  /* 846 */ 'c', 'i', 'j', 'n', 'e', 9, 0,
  /* 853 */ 'c', 'g', 'i', 'j', 'n', 'e', 9, 0,
  /* 861 */ 'c', 'l', 'g', 'i', 'j', 'n', 'e', 9, 0,
  /* 870 */ 'c', 'l', 'i', 'j', 'n', 'e', 9, 0,
  /* 878 */ 'c', 'r', 'j', 'n', 'e', 9, 0,
  /* 885 */ 'c', 'g', 'r', 'j', 'n', 'e', 9, 0,
  /* 893 */ 'c', 'l', 'g', 'r', 'j', 'n', 'e', 9, 0,
  /* 902 */ 'c', 'l', 'r', 'j', 'n', 'e', 9, 0,
  /* 910 */ 'l', 'o', 'c', 'r', 'n', 'e', 9, 0,
  /* 918 */ 'l', 'o', 'c', 'g', 'r', 'n', 'e', 9, 0,
  /* 927 */ 'l', 'o', 'c', 'r', 'e', 9, 0,
  /* 934 */ 'l', 'o', 'c', 'g', 'r', 'e', 9, 0,
  /* 942 */ 's', 't', 'e', 9, 0,
  /* 947 */ 'a', 'g', 'f', 9, 0,
  /* 952 */ 'c', 'g', 'f', 9, 0,
  /* 957 */ 'a', 'l', 'g', 'f', 9, 0,
  /* 963 */ 'c', 'l', 'g', 'f', 9, 0,
  /* 969 */ 'l', 'l', 'g', 'f', 9, 0,
  /* 975 */ 's', 'l', 'g', 'f', 9, 0,
  /* 981 */ 'd', 's', 'g', 'f', 9, 0,
  /* 987 */ 'm', 's', 'g', 'f', 9, 0,
  /* 993 */ 'l', 't', 'g', 'f', 9, 0,
  /* 999 */ 'c', 'h', 'f', 9, 0,
  /* 1004 */ 'i', 'i', 'h', 'f', 9, 0,
  /* 1010 */ 'l', 'l', 'i', 'h', 'f', 9, 0,
  /* 1017 */ 'n', 'i', 'h', 'f', 9, 0,
  /* 1023 */ 'o', 'i', 'h', 'f', 9, 0,
  /* 1029 */ 'x', 'i', 'h', 'f', 9, 0,
  /* 1035 */ 'c', 'l', 'h', 'f', 9, 0,
  /* 1041 */ 'i', 'i', 'l', 'f', 9, 0,
  /* 1047 */ 'l', 'l', 'i', 'l', 'f', 9, 0,
  /* 1054 */ 'n', 'i', 'l', 'f', 9, 0,
  /* 1060 */ 'o', 'i', 'l', 'f', 9, 0,
  /* 1066 */ 'x', 'i', 'l', 'f', 9, 0,
  /* 1072 */ 'l', 'a', 'a', 'g', 9, 0,
  /* 1078 */ 's', 'r', 'a', 'g', 9, 0,
  /* 1084 */ 's', 'l', 'b', 'g', 9, 0,
  /* 1090 */ 'r', 'i', 's', 'b', 'g', 9, 0,
  /* 1097 */ 'r', 'n', 's', 'b', 'g', 9, 0,
  /* 1104 */ 'r', 'o', 's', 'b', 'g', 9, 0,
  /* 1111 */ 'r', 'x', 's', 'b', 'g', 9, 0,
  /* 1118 */ 'a', 'l', 'c', 'g', 9, 0,
  /* 1124 */ 'l', 'o', 'c', 'g', 9, 0,
  /* 1130 */ 's', 't', 'o', 'c', 'g', 9, 0,
  /* 1137 */ 'r', 'i', 's', 'b', 'h', 'g', 9, 0,
  /* 1145 */ 'j', 'g', 9, 0,
  /* 1149 */ 'l', 'a', 'a', 'l', 'g', 9, 0,
  /* 1156 */ 'r', 'i', 's', 'b', 'l', 'g', 9, 0,
  /* 1164 */ 'c', 'l', 'g', 9, 0,
  /* 1169 */ 'd', 'l', 'g', 9, 0,
  /* 1174 */ 'r', 'l', 'l', 'g', 9, 0,
  /* 1180 */ 's', 'l', 'l', 'g', 9, 0,
  /* 1186 */ 'm', 'l', 'g', 9, 0,
  /* 1191 */ 's', 'r', 'l', 'g', 9, 0,
  /* 1197 */ 's', 'l', 'g', 9, 0,
  /* 1202 */ 'l', 'm', 'g', 9, 0,
  /* 1207 */ 's', 't', 'm', 'g', 9, 0,
  /* 1213 */ 'l', 'a', 'n', 'g', 9, 0,
  /* 1219 */ 'l', 'a', 'o', 'g', 9, 0,
  /* 1225 */ 'c', 's', 'g', 9, 0,
  /* 1230 */ 'd', 's', 'g', 9, 0,
  /* 1235 */ 'm', 's', 'g', 9, 0,
  /* 1240 */ 'b', 'r', 'c', 't', 'g', 9, 0,
  /* 1247 */ 'l', 't', 'g', 9, 0,
  /* 1252 */ 's', 't', 'g', 9, 0,
  /* 1257 */ 'l', 'r', 'v', 'g', 9, 0,
  /* 1263 */ 's', 't', 'r', 'v', 'g', 9, 0,
  /* 1270 */ 'l', 'a', 'x', 'g', 9, 0,
  /* 1276 */ 'a', 'h', 9, 0,
  /* 1280 */ 'l', 'b', 'h', 9, 0,
  /* 1285 */ 'l', 'l', 'c', 'h', 9, 0,
  /* 1291 */ 'l', 'o', 'c', 'h', 9, 0,
  /* 1297 */ 's', 't', 'o', 'c', 'h', 9, 0,
  /* 1304 */ 's', 't', 'c', 'h', 9, 0,
  /* 1310 */ 'l', 'f', 'h', 9, 0,
  /* 1315 */ 's', 't', 'f', 'h', 9, 0,
  /* 1321 */ 'l', 'o', 'c', 'g', 'h', 9, 0,
  /* 1328 */ 's', 't', 'o', 'c', 'g', 'h', 9, 0,
  /* 1336 */ 'j', 'g', 'h', 9, 0,
  /* 1341 */ 'l', 'l', 'g', 'h', 9, 0,
  /* 1347 */ 'i', 'i', 'h', 'h', 9, 0,
  /* 1353 */ 'l', 'l', 'i', 'h', 'h', 9, 0,
  /* 1360 */ 'n', 'i', 'h', 'h', 9, 0,
  /* 1366 */ 'o', 'i', 'h', 'h', 9, 0,
  /* 1372 */ 'l', 'l', 'h', 'h', 9, 0,
  /* 1378 */ 't', 'm', 'h', 'h', 9, 0,
  /* 1384 */ 's', 't', 'h', 'h', 9, 0,
  /* 1390 */ 'a', 'i', 'h', 9, 0,
  /* 1395 */ 'c', 'i', 'h', 9, 0,
  /* 1400 */ 'c', 'l', 'i', 'h', 9, 0,
  /* 1406 */ 'c', 'i', 'j', 'h', 9, 0,
  /* 1412 */ 'c', 'g', 'i', 'j', 'h', 9, 0,
  /* 1419 */ 'c', 'l', 'g', 'i', 'j', 'h', 9, 0,
  /* 1427 */ 'c', 'l', 'i', 'j', 'h', 9, 0,
  /* 1434 */ 'c', 'r', 'j', 'h', 9, 0,
  /* 1440 */ 'c', 'g', 'r', 'j', 'h', 9, 0,
  /* 1447 */ 'c', 'l', 'g', 'r', 'j', 'h', 9, 0,
  /* 1455 */ 'c', 'l', 'r', 'j', 'h', 9, 0,
  /* 1462 */ 'l', 'o', 'c', 'l', 'h', 9, 0,
  /* 1469 */ 's', 't', 'o', 'c', 'l', 'h', 9, 0,
  /* 1477 */ 'l', 'o', 'c', 'g', 'l', 'h', 9, 0,
  /* 1485 */ 's', 't', 'o', 'c', 'g', 'l', 'h', 9, 0,
  /* 1494 */ 'j', 'g', 'l', 'h', 9, 0,
  /* 1500 */ 'i', 'i', 'l', 'h', 9, 0,
  /* 1506 */ 'l', 'l', 'i', 'l', 'h', 9, 0,
  /* 1513 */ 'n', 'i', 'l', 'h', 9, 0,
  /* 1519 */ 'o', 'i', 'l', 'h', 9, 0,
  /* 1525 */ 'c', 'i', 'j', 'l', 'h', 9, 0,
  /* 1532 */ 'c', 'g', 'i', 'j', 'l', 'h', 9, 0,
  /* 1540 */ 'c', 'l', 'g', 'i', 'j', 'l', 'h', 9, 0,
  /* 1549 */ 'c', 'l', 'i', 'j', 'l', 'h', 9, 0,
  /* 1557 */ 'c', 'r', 'j', 'l', 'h', 9, 0,
  /* 1564 */ 'c', 'g', 'r', 'j', 'l', 'h', 9, 0,
  /* 1572 */ 'c', 'l', 'g', 'r', 'j', 'l', 'h', 9, 0,
  /* 1581 */ 'c', 'l', 'r', 'j', 'l', 'h', 9, 0,
  /* 1589 */ 'l', 'l', 'h', 9, 0,
  /* 1594 */ 't', 'm', 'l', 'h', 9, 0,
  /* 1600 */ 'l', 'o', 'c', 'n', 'l', 'h', 9, 0,
  /* 1608 */ 's', 't', 'o', 'c', 'n', 'l', 'h', 9, 0,
  /* 1617 */ 'l', 'o', 'c', 'g', 'n', 'l', 'h', 9, 0,
  /* 1626 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 'h', 9, 0,
  /* 1636 */ 'j', 'g', 'n', 'l', 'h', 9, 0,
  /* 1643 */ 'c', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 1651 */ 'c', 'g', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 1660 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 1670 */ 'c', 'l', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 1679 */ 'c', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 1687 */ 'c', 'g', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 1696 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 1706 */ 'c', 'l', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 1715 */ 'l', 'o', 'c', 'r', 'n', 'l', 'h', 9, 0,
  /* 1724 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 'h', 9, 0,
  /* 1734 */ 'l', 'o', 'c', 'r', 'l', 'h', 9, 0,
  /* 1742 */ 'l', 'o', 'c', 'g', 'r', 'l', 'h', 9, 0,
  /* 1751 */ 'm', 'h', 9, 0,
  /* 1755 */ 'l', 'o', 'c', 'n', 'h', 9, 0,
  /* 1762 */ 's', 't', 'o', 'c', 'n', 'h', 9, 0,
  /* 1770 */ 'l', 'o', 'c', 'g', 'n', 'h', 9, 0,
  /* 1778 */ 's', 't', 'o', 'c', 'g', 'n', 'h', 9, 0,
  /* 1787 */ 'j', 'g', 'n', 'h', 9, 0,
  /* 1793 */ 'c', 'i', 'j', 'n', 'h', 9, 0,
  /* 1800 */ 'c', 'g', 'i', 'j', 'n', 'h', 9, 0,
  /* 1808 */ 'c', 'l', 'g', 'i', 'j', 'n', 'h', 9, 0,
  /* 1817 */ 'c', 'l', 'i', 'j', 'n', 'h', 9, 0,
  /* 1825 */ 'c', 'r', 'j', 'n', 'h', 9, 0,
  /* 1832 */ 'c', 'g', 'r', 'j', 'n', 'h', 9, 0,
  /* 1840 */ 'c', 'l', 'g', 'r', 'j', 'n', 'h', 9, 0,
  /* 1849 */ 'c', 'l', 'r', 'j', 'n', 'h', 9, 0,
  /* 1857 */ 'l', 'o', 'c', 'r', 'n', 'h', 9, 0,
  /* 1865 */ 'l', 'o', 'c', 'g', 'r', 'n', 'h', 9, 0,
  /* 1874 */ 'l', 'o', 'c', 'r', 'h', 9, 0,
  /* 1881 */ 'l', 'o', 'c', 'g', 'r', 'h', 9, 0,
  /* 1889 */ 's', 'h', 9, 0,
  /* 1893 */ 's', 't', 'h', 9, 0,
  /* 1898 */ 'a', 'f', 'i', 9, 0,
  /* 1903 */ 'c', 'f', 'i', 9, 0,
  /* 1908 */ 'a', 'g', 'f', 'i', 9, 0,
  /* 1914 */ 'c', 'g', 'f', 'i', 9, 0,
  /* 1920 */ 'a', 'l', 'g', 'f', 'i', 9, 0,
  /* 1927 */ 'c', 'l', 'g', 'f', 'i', 9, 0,
  /* 1934 */ 's', 'l', 'g', 'f', 'i', 9, 0,
  /* 1941 */ 'm', 's', 'g', 'f', 'i', 9, 0,
  /* 1948 */ 'a', 'l', 'f', 'i', 9, 0,
  /* 1954 */ 'c', 'l', 'f', 'i', 9, 0,
  /* 1960 */ 's', 'l', 'f', 'i', 9, 0,
  /* 1966 */ 'm', 's', 'f', 'i', 9, 0,
  /* 1972 */ 'a', 'h', 'i', 9, 0,
  /* 1977 */ 'c', 'h', 'i', 9, 0,
  /* 1982 */ 'a', 'g', 'h', 'i', 9, 0,
  /* 1988 */ 'c', 'g', 'h', 'i', 9, 0,
  /* 1994 */ 'l', 'g', 'h', 'i', 9, 0,
  /* 2000 */ 'm', 'g', 'h', 'i', 9, 0,
  /* 2006 */ 'm', 'v', 'g', 'h', 'i', 9, 0,
  /* 2013 */ 'm', 'v', 'h', 'h', 'i', 9, 0,
  /* 2020 */ 'l', 'h', 'i', 9, 0,
  /* 2025 */ 'm', 'h', 'i', 9, 0,
  /* 2030 */ 'm', 'v', 'h', 'i', 9, 0,
  /* 2036 */ 'c', 'l', 'i', 9, 0,
  /* 2041 */ 'n', 'i', 9, 0,
  /* 2045 */ 'o', 'i', 9, 0,
  /* 2049 */ 'a', 's', 'i', 9, 0,
  /* 2054 */ 'a', 'g', 's', 'i', 9, 0,
  /* 2060 */ 'c', 'h', 's', 'i', 9, 0,
  /* 2066 */ 'c', 'l', 'f', 'h', 's', 'i', 9, 0,
  /* 2074 */ 'c', 'g', 'h', 's', 'i', 9, 0,
  /* 2081 */ 'c', 'l', 'g', 'h', 's', 'i', 9, 0,
  /* 2089 */ 'c', 'h', 'h', 's', 'i', 9, 0,
  /* 2096 */ 'c', 'l', 'h', 'h', 's', 'i', 9, 0,
  /* 2104 */ 'm', 'v', 'i', 9, 0,
  /* 2109 */ 'x', 'i', 9, 0,
  /* 2113 */ 'c', 'i', 'j', 9, 0,
  /* 2118 */ 'c', 'g', 'i', 'j', 9, 0,
  /* 2124 */ 'c', 'l', 'g', 'i', 'j', 9, 0,
  /* 2131 */ 'c', 'l', 'i', 'j', 9, 0,
  /* 2137 */ 'c', 'r', 'j', 9, 0,
  /* 2142 */ 'c', 'g', 'r', 'j', 9, 0,
  /* 2148 */ 'c', 'l', 'g', 'r', 'j', 9, 0,
  /* 2155 */ 'c', 'l', 'r', 'j', 9, 0,
  /* 2161 */ 's', 'r', 'a', 'k', 9, 0,
  /* 2167 */ 'a', 'h', 'i', 'k', 9, 0,
  /* 2173 */ 'a', 'g', 'h', 'i', 'k', 9, 0,
  /* 2180 */ 'a', 'l', 'g', 'h', 's', 'i', 'k', 9, 0,
  /* 2189 */ 'a', 'l', 'h', 's', 'i', 'k', 9, 0,
  /* 2197 */ 's', 'l', 'l', 'k', 9, 0,
  /* 2203 */ 's', 'r', 'l', 'k', 9, 0,
  /* 2209 */ 'a', 'r', 'k', 9, 0,
  /* 2214 */ 'a', 'g', 'r', 'k', 9, 0,
  /* 2220 */ 'a', 'l', 'g', 'r', 'k', 9, 0,
  /* 2227 */ 's', 'l', 'g', 'r', 'k', 9, 0,
  /* 2234 */ 'n', 'g', 'r', 'k', 9, 0,
  /* 2240 */ 'o', 'g', 'r', 'k', 9, 0,
  /* 2246 */ 's', 'g', 'r', 'k', 9, 0,
  /* 2252 */ 'x', 'g', 'r', 'k', 9, 0,
  /* 2258 */ 'a', 'l', 'r', 'k', 9, 0,
  /* 2264 */ 's', 'l', 'r', 'k', 9, 0,
  /* 2270 */ 'n', 'r', 'k', 9, 0,
  /* 2275 */ 'o', 'r', 'k', 9, 0,
  /* 2280 */ 's', 'r', 'k', 9, 0,
  /* 2285 */ 'x', 'r', 'k', 9, 0,
  /* 2290 */ 'l', 'a', 'a', 'l', 9, 0,
  /* 2296 */ 'l', 'o', 'c', 'l', 9, 0,
  /* 2302 */ 's', 't', 'o', 'c', 'l', 9, 0,
  /* 2309 */ 'b', 'r', 'c', 'l', 9, 0,
  /* 2315 */ 'd', 'l', 9, 0,
  /* 2319 */ 'l', 'o', 'c', 'g', 'l', 9, 0,
  /* 2326 */ 's', 't', 'o', 'c', 'g', 'l', 9, 0,
  /* 2334 */ 'j', 'g', 'l', 9, 0,
  /* 2339 */ 'i', 'i', 'h', 'l', 9, 0,
  /* 2345 */ 'l', 'l', 'i', 'h', 'l', 9, 0,
  /* 2352 */ 'n', 'i', 'h', 'l', 9, 0,
  /* 2358 */ 'o', 'i', 'h', 'l', 9, 0,
  /* 2364 */ 't', 'm', 'h', 'l', 9, 0,
  /* 2370 */ 'c', 'i', 'j', 'l', 9, 0,
  /* 2376 */ 'c', 'g', 'i', 'j', 'l', 9, 0,
  /* 2383 */ 'c', 'l', 'g', 'i', 'j', 'l', 9, 0,
  /* 2391 */ 'c', 'l', 'i', 'j', 'l', 9, 0,
  /* 2398 */ 'c', 'r', 'j', 'l', 9, 0,
  /* 2404 */ 'c', 'g', 'r', 'j', 'l', 9, 0,
  /* 2411 */ 'c', 'l', 'g', 'r', 'j', 'l', 9, 0,
  /* 2419 */ 'c', 'l', 'r', 'j', 'l', 9, 0,
  /* 2426 */ 'i', 'i', 'l', 'l', 9, 0,
  /* 2432 */ 'l', 'l', 'i', 'l', 'l', 9, 0,
  /* 2439 */ 'n', 'i', 'l', 'l', 9, 0,
  /* 2445 */ 'o', 'i', 'l', 'l', 9, 0,
  /* 2451 */ 't', 'm', 'l', 'l', 9, 0,
  /* 2457 */ 'r', 'l', 'l', 9, 0,
  /* 2462 */ 's', 'l', 'l', 9, 0,
  /* 2467 */ 'l', 'o', 'c', 'n', 'l', 9, 0,
  /* 2474 */ 's', 't', 'o', 'c', 'n', 'l', 9, 0,
  /* 2482 */ 'l', 'o', 'c', 'g', 'n', 'l', 9, 0,
  /* 2490 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 9, 0,
  /* 2499 */ 'j', 'g', 'n', 'l', 9, 0,
  /* 2505 */ 'c', 'i', 'j', 'n', 'l', 9, 0,
  /* 2512 */ 'c', 'g', 'i', 'j', 'n', 'l', 9, 0,
  /* 2520 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 9, 0,
  /* 2529 */ 'c', 'l', 'i', 'j', 'n', 'l', 9, 0,
  /* 2537 */ 'c', 'r', 'j', 'n', 'l', 9, 0,
  /* 2544 */ 'c', 'g', 'r', 'j', 'n', 'l', 9, 0,
  /* 2552 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 9, 0,
  /* 2561 */ 'c', 'l', 'r', 'j', 'n', 'l', 9, 0,
  /* 2569 */ 'l', 'o', 'c', 'r', 'n', 'l', 9, 0,
  /* 2577 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 9, 0,
  /* 2586 */ 'l', 'a', 'r', 'l', 9, 0,
  /* 2592 */ 'l', 'o', 'c', 'r', 'l', 9, 0,
  /* 2599 */ 'p', 'f', 'd', 'r', 'l', 9, 0,
  /* 2606 */ 'c', 'g', 'f', 'r', 'l', 9, 0,
  /* 2613 */ 'c', 'l', 'g', 'f', 'r', 'l', 9, 0,
  /* 2621 */ 'l', 'l', 'g', 'f', 'r', 'l', 9, 0,
  /* 2629 */ 'l', 'o', 'c', 'g', 'r', 'l', 9, 0,
  /* 2637 */ 'c', 'l', 'g', 'r', 'l', 9, 0,
  /* 2644 */ 's', 't', 'g', 'r', 'l', 9, 0,
  /* 2651 */ 'c', 'h', 'r', 'l', 9, 0,
  /* 2657 */ 'c', 'g', 'h', 'r', 'l', 9, 0,
  /* 2664 */ 'c', 'l', 'g', 'h', 'r', 'l', 9, 0,
  /* 2672 */ 'l', 'l', 'g', 'h', 'r', 'l', 9, 0,
  /* 2680 */ 'c', 'l', 'h', 'r', 'l', 9, 0,
  /* 2687 */ 'l', 'l', 'h', 'r', 'l', 9, 0,
  /* 2694 */ 's', 't', 'h', 'r', 'l', 9, 0,
  /* 2701 */ 'c', 'l', 'r', 'l', 9, 0,
  /* 2707 */ 's', 'r', 'l', 9, 0,
  /* 2712 */ 's', 't', 'r', 'l', 9, 0,
  /* 2718 */ 'b', 'r', 'a', 's', 'l', 9, 0,
  /* 2725 */ 'i', 'p', 'm', 9, 0,
  /* 2730 */ 't', 'm', 9, 0,
  /* 2734 */ 'l', 'a', 'n', 9, 0,
  /* 2739 */ 'l', 'a', 'o', 9, 0,
  /* 2744 */ 'l', 'o', 'c', 'o', 9, 0,
  /* 2750 */ 's', 't', 'o', 'c', 'o', 9, 0,
  /* 2757 */ 'l', 'o', 'c', 'g', 'o', 9, 0,
  /* 2764 */ 's', 't', 'o', 'c', 'g', 'o', 9, 0,
  /* 2772 */ 'j', 'g', 'o', 9, 0,
  /* 2777 */ 'j', 'o', 9, 0,
  /* 2781 */ 'l', 'o', 'c', 'n', 'o', 9, 0,
  /* 2788 */ 's', 't', 'o', 'c', 'n', 'o', 9, 0,
  /* 2796 */ 'l', 'o', 'c', 'g', 'n', 'o', 9, 0,
  /* 2804 */ 's', 't', 'o', 'c', 'g', 'n', 'o', 9, 0,
  /* 2813 */ 'j', 'g', 'n', 'o', 9, 0,
  /* 2819 */ 'j', 'n', 'o', 9, 0,
  /* 2824 */ 'l', 'o', 'c', 'r', 'n', 'o', 9, 0,
  /* 2832 */ 'l', 'o', 'c', 'g', 'r', 'n', 'o', 9, 0,
  /* 2841 */ 'l', 'o', 'c', 'r', 'o', 9, 0,
  /* 2848 */ 'l', 'o', 'c', 'g', 'r', 'o', 9, 0,
  /* 2856 */ 'e', 'a', 'r', 9, 0,
  /* 2861 */ 'm', 'a', 'd', 'b', 'r', 9, 0,
  /* 2868 */ 'l', 'c', 'd', 'b', 'r', 9, 0,
  /* 2875 */ 'd', 'd', 'b', 'r', 9, 0,
  /* 2881 */ 'l', 'e', 'd', 'b', 'r', 9, 0,
  /* 2888 */ 'c', 'f', 'd', 'b', 'r', 9, 0,
  /* 2895 */ 'c', 'l', 'f', 'd', 'b', 'r', 9, 0,
  /* 2903 */ 'c', 'g', 'd', 'b', 'r', 9, 0,
  /* 2910 */ 'c', 'l', 'g', 'd', 'b', 'r', 9, 0,
  /* 2918 */ 'f', 'i', 'd', 'b', 'r', 9, 0,
  /* 2925 */ 'm', 'd', 'b', 'r', 9, 0,
  /* 2931 */ 'l', 'n', 'd', 'b', 'r', 9, 0,
  /* 2938 */ 'l', 'p', 'd', 'b', 'r', 9, 0,
  /* 2945 */ 's', 'q', 'd', 'b', 'r', 9, 0,
  /* 2952 */ 'm', 's', 'd', 'b', 'r', 9, 0,
  /* 2959 */ 'l', 't', 'd', 'b', 'r', 9, 0,
  /* 2966 */ 'l', 'x', 'd', 'b', 'r', 9, 0,
  /* 2973 */ 'm', 'x', 'd', 'b', 'r', 9, 0,
  /* 2980 */ 'm', 'a', 'e', 'b', 'r', 9, 0,
  /* 2987 */ 'l', 'c', 'e', 'b', 'r', 9, 0,
  /* 2994 */ 'l', 'd', 'e', 'b', 'r', 9, 0,
  /* 3001 */ 'm', 'd', 'e', 'b', 'r', 9, 0,
  /* 3008 */ 'm', 'e', 'e', 'b', 'r', 9, 0,
  /* 3015 */ 'c', 'f', 'e', 'b', 'r', 9, 0,
  /* 3022 */ 'c', 'l', 'f', 'e', 'b', 'r', 9, 0,
  /* 3030 */ 'c', 'g', 'e', 'b', 'r', 9, 0,
  /* 3037 */ 'c', 'l', 'g', 'e', 'b', 'r', 9, 0,
  /* 3045 */ 'f', 'i', 'e', 'b', 'r', 9, 0,
  /* 3052 */ 'l', 'n', 'e', 'b', 'r', 9, 0,
  /* 3059 */ 'l', 'p', 'e', 'b', 'r', 9, 0,
  /* 3066 */ 's', 'q', 'e', 'b', 'r', 9, 0,
  /* 3073 */ 'm', 's', 'e', 'b', 'r', 9, 0,
  /* 3080 */ 'l', 't', 'e', 'b', 'r', 9, 0,
  /* 3087 */ 'l', 'x', 'e', 'b', 'r', 9, 0,
  /* 3094 */ 'c', 'd', 'f', 'b', 'r', 9, 0,
  /* 3101 */ 'c', 'e', 'f', 'b', 'r', 9, 0,
  /* 3108 */ 'c', 'd', 'l', 'f', 'b', 'r', 9, 0,
  /* 3116 */ 'c', 'e', 'l', 'f', 'b', 'r', 9, 0,
  /* 3124 */ 'c', 'x', 'l', 'f', 'b', 'r', 9, 0,
  /* 3132 */ 'c', 'x', 'f', 'b', 'r', 9, 0,
  /* 3139 */ 'c', 'd', 'g', 'b', 'r', 9, 0,
  /* 3146 */ 'c', 'e', 'g', 'b', 'r', 9, 0,
  /* 3153 */ 'c', 'd', 'l', 'g', 'b', 'r', 9, 0,
  /* 3161 */ 'c', 'e', 'l', 'g', 'b', 'r', 9, 0,
  /* 3169 */ 'c', 'x', 'l', 'g', 'b', 'r', 9, 0,
  /* 3177 */ 'c', 'x', 'g', 'b', 'r', 9, 0,
  /* 3184 */ 's', 'l', 'b', 'r', 9, 0,
  /* 3190 */ 'a', 'x', 'b', 'r', 9, 0,
  /* 3196 */ 'l', 'c', 'x', 'b', 'r', 9, 0,
  /* 3203 */ 'l', 'd', 'x', 'b', 'r', 9, 0,
  /* 3210 */ 'l', 'e', 'x', 'b', 'r', 9, 0,
  /* 3217 */ 'c', 'f', 'x', 'b', 'r', 9, 0,
  /* 3224 */ 'c', 'l', 'f', 'x', 'b', 'r', 9, 0,
  /* 3232 */ 'c', 'g', 'x', 'b', 'r', 9, 0,
  /* 3239 */ 'c', 'l', 'g', 'x', 'b', 'r', 9, 0,
  /* 3247 */ 'f', 'i', 'x', 'b', 'r', 9, 0,
  /* 3254 */ 'm', 'x', 'b', 'r', 9, 0,
  /* 3260 */ 'l', 'n', 'x', 'b', 'r', 9, 0,
  /* 3267 */ 'l', 'p', 'x', 'b', 'r', 9, 0,
  /* 3274 */ 's', 'q', 'x', 'b', 'r', 9, 0,
  /* 3281 */ 's', 'x', 'b', 'r', 9, 0,
  /* 3287 */ 'l', 't', 'x', 'b', 'r', 9, 0,
  /* 3294 */ 'b', 'c', 'r', 9, 0,
  /* 3299 */ 'l', 'l', 'g', 'c', 'r', 9, 0,
  /* 3306 */ 'a', 'l', 'c', 'r', 9, 0,
  /* 3312 */ 'l', 'l', 'c', 'r', 9, 0,
  /* 3318 */ 'l', 'o', 'c', 'r', 9, 0,
  /* 3324 */ 'l', 'g', 'd', 'r', 9, 0,
  /* 3330 */ 'l', 'd', 'r', 9, 0,
  /* 3335 */ 'c', 'p', 's', 'd', 'r', 9, 0,
  /* 3342 */ 'l', 'z', 'd', 'r', 9, 0,
  /* 3348 */ 'b', 'e', 'r', 9, 0,
  /* 3353 */ 'b', 'h', 'e', 'r', 9, 0,
  /* 3359 */ 'b', 'n', 'h', 'e', 'r', 9, 0,
  /* 3366 */ 'b', 'l', 'e', 'r', 9, 0,
  /* 3372 */ 'b', 'n', 'l', 'e', 'r', 9, 0,
  /* 3379 */ 'b', 'n', 'e', 'r', 9, 0,
  /* 3385 */ 'l', 'z', 'e', 'r', 9, 0,
  /* 3391 */ 'a', 'g', 'f', 'r', 9, 0,
  /* 3397 */ 'l', 'c', 'g', 'f', 'r', 9, 0,
  /* 3404 */ 'a', 'l', 'g', 'f', 'r', 9, 0,
  /* 3411 */ 'c', 'l', 'g', 'f', 'r', 9, 0,
  /* 3418 */ 'l', 'l', 'g', 'f', 'r', 9, 0,
  /* 3425 */ 's', 'l', 'g', 'f', 'r', 9, 0,
  /* 3432 */ 'l', 'n', 'g', 'f', 'r', 9, 0,
  /* 3439 */ 'l', 'p', 'g', 'f', 'r', 9, 0,
  /* 3446 */ 'd', 's', 'g', 'f', 'r', 9, 0,
  /* 3453 */ 'm', 's', 'g', 'f', 'r', 9, 0,
  /* 3460 */ 'l', 't', 'g', 'f', 'r', 9, 0,
  /* 3467 */ 'a', 'g', 'r', 9, 0,
  /* 3472 */ 's', 'l', 'b', 'g', 'r', 9, 0,
  /* 3479 */ 'a', 'l', 'c', 'g', 'r', 9, 0,
  /* 3486 */ 'l', 'o', 'c', 'g', 'r', 9, 0,
  /* 3493 */ 'l', 'd', 'g', 'r', 9, 0,
  /* 3499 */ 'a', 'l', 'g', 'r', 9, 0,
  /* 3505 */ 'c', 'l', 'g', 'r', 9, 0,
  /* 3511 */ 'd', 'l', 'g', 'r', 9, 0,
  /* 3517 */ 'm', 'l', 'g', 'r', 9, 0,
  /* 3523 */ 's', 'l', 'g', 'r', 9, 0,
  /* 3529 */ 'l', 'n', 'g', 'r', 9, 0,
  /* 3535 */ 'f', 'l', 'o', 'g', 'r', 9, 0,
  /* 3542 */ 'l', 'p', 'g', 'r', 9, 0,
  /* 3548 */ 'd', 's', 'g', 'r', 9, 0,
  /* 3554 */ 'm', 's', 'g', 'r', 9, 0,
  /* 3560 */ 'l', 't', 'g', 'r', 9, 0,
  /* 3566 */ 'l', 'r', 'v', 'g', 'r', 9, 0,
  /* 3573 */ 'x', 'g', 'r', 9, 0,
  /* 3578 */ 'b', 'h', 'r', 9, 0,
  /* 3583 */ 'l', 'l', 'g', 'h', 'r', 9, 0,
  /* 3590 */ 'b', 'l', 'h', 'r', 9, 0,
  /* 3596 */ 'l', 'l', 'h', 'r', 9, 0,
  /* 3602 */ 'b', 'n', 'l', 'h', 'r', 9, 0,
  /* 3609 */ 'b', 'n', 'h', 'r', 9, 0,
  /* 3615 */ 'a', 'l', 'r', 9, 0,
  /* 3620 */ 'b', 'l', 'r', 9, 0,
  /* 3625 */ 'c', 'l', 'r', 9, 0,
  /* 3630 */ 'd', 'l', 'r', 9, 0,
  /* 3635 */ 'b', 'n', 'l', 'r', 9, 0,
  /* 3641 */ 's', 'l', 'r', 9, 0,
  /* 3646 */ 'l', 'n', 'r', 9, 0,
  /* 3651 */ 'b', 'o', 'r', 9, 0,
  /* 3656 */ 'b', 'n', 'o', 'r', 9, 0,
  /* 3662 */ 'l', 'p', 'r', 9, 0,
  /* 3667 */ 'b', 'a', 's', 'r', 9, 0,
  /* 3673 */ 'm', 's', 'r', 9, 0,
  /* 3678 */ 'l', 't', 'r', 9, 0,
  /* 3683 */ 'l', 'r', 'v', 'r', 9, 0,
  /* 3689 */ 'l', 'x', 'r', 9, 0,
  /* 3694 */ 'l', 'z', 'x', 'r', 9, 0,
  /* 3700 */ 'b', 'r', 'a', 's', 9, 0,
  /* 3706 */ 'c', 's', 9, 0,
  /* 3710 */ 'm', 's', 9, 0,
  /* 3714 */ 'b', 'r', 'c', 't', 9, 0,
  /* 3720 */ 'l', 't', 9, 0,
  /* 3724 */ 'c', 'l', 's', 't', 9, 0,
  /* 3730 */ 's', 'r', 's', 't', 9, 0,
  /* 3736 */ 'm', 'v', 's', 't', 9, 0,
  /* 3742 */ 'l', 'r', 'v', 9, 0,
  /* 3747 */ 's', 't', 'r', 'v', 9, 0,
  /* 3753 */ 'l', 'a', 'x', 9, 0,
  /* 3758 */ 'l', 'a', 'y', 9, 0,
  /* 3763 */ 'i', 'c', 'y', 9, 0,
  /* 3768 */ 's', 't', 'c', 'y', 9, 0,
  /* 3774 */ 'l', 'd', 'y', 9, 0,
  /* 3779 */ 's', 't', 'd', 'y', 9, 0,
  /* 3785 */ 'l', 'e', 'y', 9, 0,
  /* 3790 */ 's', 't', 'e', 'y', 9, 0,
  /* 3796 */ 'a', 'h', 'y', 9, 0,
  /* 3801 */ 'c', 'h', 'y', 9, 0,
  /* 3806 */ 'l', 'h', 'y', 9, 0,
  /* 3811 */ 'm', 'h', 'y', 9, 0,
  /* 3816 */ 's', 'h', 'y', 9, 0,
  /* 3821 */ 's', 't', 'h', 'y', 9, 0,
  /* 3827 */ 'c', 'l', 'i', 'y', 9, 0,
  /* 3833 */ 'n', 'i', 'y', 9, 0,
  /* 3838 */ 'o', 'i', 'y', 9, 0,
  /* 3843 */ 'm', 'v', 'i', 'y', 9, 0,
  /* 3849 */ 'x', 'i', 'y', 9, 0,
  /* 3854 */ 'a', 'l', 'y', 9, 0,
  /* 3859 */ 'c', 'l', 'y', 9, 0,
  /* 3864 */ 's', 'l', 'y', 9, 0,
  /* 3869 */ 't', 'm', 'y', 9, 0,
  /* 3874 */ 'n', 'y', 9, 0,
  /* 3878 */ 'o', 'y', 9, 0,
  /* 3882 */ 'c', 's', 'y', 9, 0,
  /* 3887 */ 'm', 's', 'y', 9, 0,
  /* 3892 */ 's', 't', 'y', 9, 0,
  /* 3897 */ 'x', 'y', 9, 0,
  /* 3901 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 3914 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 3921 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 3931 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 3946 */ 'l', 'o', 'c', 0,
  /* 3950 */ 's', 't', 'o', 'c', 0,
  /* 3955 */ 'l', 'o', 'c', 'g', 0,
  /* 3960 */ 's', 't', 'o', 'c', 'g', 0,
  /* 3966 */ 'j', 'g', 0,
  /* 3969 */ 'c', 'i', 'j', 0,
  /* 3973 */ 'c', 'g', 'i', 'j', 0,
  /* 3978 */ 'c', 'l', 'g', 'i', 'j', 0,
  /* 3984 */ 'c', 'l', 'i', 'j', 0,
  /* 3989 */ 'c', 'r', 'j', 0,
  /* 3993 */ 'c', 'g', 'r', 'j', 0,
  /* 3998 */ 'c', 'l', 'g', 'r', 'j', 0,
  /* 4004 */ 'c', 'l', 'r', 'j', 0,
  /* 4009 */ 'l', 'o', 'c', 'r', 0,
  /* 4014 */ 'l', 'o', 'c', 'g', 'r', 0,
  };
#endif

  // Emit the opcode for the instruction.
  uint32_t Bits = OpInfo[MCInst_getOpcode(MI)];
  // assert(Bits != 0 && "Cannot print this instruction.");
#ifndef CAPSTONE_DIET
  SStream_concat0(O, AsmStrs+(Bits & 4095)-1);
#endif


  // Fragment 0 encoded into 4 bits for 11 unique commands.
  //printf("Frag-0: %"PRIu64"\n", (Bits >> 12) & 15);
  switch ((Bits >> 12) & 15) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END
    return;
    break;
  case 1:
    // A, ADB, ADBR, AEB, AEBR, AFI, AG, AGF, AGFI, AGFR, AGHI, AGHIK, AGR, A...
    printOperand(MI, 0, O); 
    break;
  case 2:
    // AGSI, ASI, CGHSI, CHHSI, CHSI, CLFHSI, CLGHSI, CLHHSI, CLI, CLIY, MVGH...
    printBDAddrOperand(MI, 0, O); 
    SStream_concat0(O, ", "); 
    break;
  case 3:
    // AsmBCR, AsmBRC, AsmBRCL, PFD, PFDRL
    printU4ImmOperand(MI, 0, O); 
    SStream_concat0(O, ", "); 
    break;
  case 4:
    // AsmEJ, AsmEJG, AsmHEJ, AsmHEJG, AsmHJ, AsmHJG, AsmLEJ, AsmLEJG, AsmLHJ...
    printPCRelOperand(MI, 0, O); 
    return;
    break;
  case 5:
    // BRC, BRCL
    printCond4Operand(MI, 1, O); 
    SStream_concat0(O, "\t"); 
    printPCRelOperand(MI, 2, O); 
    return;
    break;
  case 6:
    // CGIJ, CGRJ, CIJ, CLGIJ, CLGRJ, CLIJ, CLRJ, CRJ
    printCond4Operand(MI, 2, O); 
    SStream_concat0(O, "\t"); 
    printOperand(MI, 0, O); 
    SStream_concat0(O, ", "); 
    break;
  case 7:
    // CLC, MVC, NC, OC, XC
    printBDLAddrOperand(MI, 0, O); 
    SStream_concat0(O, ", "); 
    printBDAddrOperand(MI, 3, O); 
    return;
    break;
  case 8:
    // LOC, LOCG
    printCond4Operand(MI, 5, O); 
    SStream_concat0(O, "\t"); 
    printOperand(MI, 0, O); 
    SStream_concat0(O, ", "); 
    printBDAddrOperand(MI, 2, O); 
    return;
    break;
  case 9:
    // LOCGR, LOCR
    printCond4Operand(MI, 3, O); 
    SStream_concat0(O, "\t"); 
    printOperand(MI, 0, O); 
    SStream_concat0(O, ", "); 
    printOperand(MI, 1, O); 
    return;
    break;
  case 10:
    // STOC, STOCG
    printCond4Operand(MI, 4, O); 
    SStream_concat0(O, "\t"); 
    printOperand(MI, 0, O); 
    SStream_concat0(O, ", "); 
    printBDAddrOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 1 encoded into 4 bits for 11 unique commands.
  //printf("Frag-1: %"PRIu64"\n", (Bits >> 16) & 15);
  switch ((Bits >> 16) & 15) {
  default:   // unreachable.
  case 0:
    // A, ADB, ADBR, AEB, AEBR, AFI, AG, AGF, AGFI, AGFR, AGHI, AGHIK, AGR, A...
    SStream_concat0(O, ", "); 
    break;
  case 1:
    // AGSI, ASI
    printS8ImmOperand(MI, 2, O); 
    return;
    break;
  case 2:
    // AsmBCR, CGRJ, CLGRJ, CLRJ, CRJ
    printOperand(MI, 1, O); 
    break;
  case 3:
    // AsmBRC, AsmBRCL, PFDRL
    printPCRelOperand(MI, 1, O); 
    return;
    break;
  case 4:
    // AsmEBR, AsmHBR, AsmHEBR, AsmLBR, AsmLEBR, AsmLHBR, AsmNEBR, AsmNHBR, A...
    return;
    break;
  case 5:
    // CGHSI, CHHSI, CHSI, MVGHI, MVHHI, MVHI
    printS16ImmOperand(MI, 2, O); 
    return;
    break;
  case 6:
    // CGIJ, CIJ
    printS8ImmOperand(MI, 1, O); 
    SStream_concat0(O, ", "); 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 7:
    // CLFHSI, CLGHSI, CLHHSI
    printU16ImmOperand(MI, 2, O); 
    return;
    break;
  case 8:
    // CLGIJ, CLIJ
    printU8ImmOperand(MI, 1, O); 
    SStream_concat0(O, ", "); 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 9:
    // CLI, CLIY, MVI, MVIY, NI, NIY, OI, OIY, TM, TMY, XI, XIY
    printU8ImmOperand(MI, 2, O); 
    return;
    break;
  case 10:
    // PFD
    printBDXAddrOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 22 unique commands.
  //printf("Frag-2: %"PRIu64"\n", (Bits >> 20) & 31);
  switch ((Bits >> 20) & 31) {
  default:   // unreachable.
  case 0:
    // A, ADB, AEB, AG, AGF, AH, AHY, AL, ALC, ALCG, ALG, ALGF, ALY, AY, DDB,...
    printBDXAddrOperand(MI, 2, O); 
    return;
    break;
  case 1:
    // ADBR, AEBR, AGFR, AGR, ALCGR, ALCR, ALGFR, ALGR, ALR, AR, AXBR, AsmELO...
    printOperand(MI, 2, O); 
    break;
  case 2:
    // AFI, AGFI, AIH, MSFI, MSGFI
    printS32ImmOperand(MI, 2, O); 
    return;
    break;
  case 3:
    // AGHI, AHI, MGHI, MHI
    printS16ImmOperand(MI, 2, O); 
    return;
    break;
  case 4:
    // AGHIK, AGRK, AHIK, ALGHSIK, ALGRK, ALHSIK, ALRK, ARK, AsmCGRJ, AsmCLGR...
    printOperand(MI, 1, O); 
    break;
  case 5:
    // ALFI, ALGFI, NIHF, NILF, OIHF, OILF, SLFI, SLGFI, XIHF, XILF
    printU32ImmOperand(MI, 2, O); 
    return;
    break;
  case 6:
    // AsmBCR
    return;
    break;
  case 7:
    // AsmCGIJ, AsmCIJ, AsmJEAltCGI, AsmJEAltCI, AsmJECGI, AsmJECI, AsmJHAltC...
    printS8ImmOperand(MI, 1, O); 
    SStream_concat0(O, ", "); 
    break;
  case 8:
    // AsmCLGIJ, AsmCLIJ, AsmJEAltCLGI, AsmJEAltCLI, AsmJECLGI, AsmJECLI, Asm...
    printU8ImmOperand(MI, 1, O); 
    SStream_concat0(O, ", "); 
    break;
  case 9:
    // AsmELOC, AsmELOCG, AsmHELOC, AsmHELOCG, AsmHLOC, AsmHLOCG, AsmLELOC, A...
    printBDAddrOperand(MI, 2, O); 
    break;
  case 10:
    // AsmESTOC, AsmESTOCG, AsmHESTOC, AsmHESTOCG, AsmHSTOC, AsmHSTOCG, AsmLE...
    printBDAddrOperand(MI, 1, O); 
    break;
  case 11:
    // BRAS, BRASL, CGFRL, CGHRL, CGRL, CHRL, CLGFRL, CLGHRL, CLGRL, CLHRL, C...
    printPCRelOperand(MI, 1, O); 
    return;
    break;
  case 12:
    // BRCT, BRCTG
    printPCRelOperand(MI, 2, O); 
    return;
    break;
  case 13:
    // C, CDB, CEB, CG, CGF, CGH, CH, CHF, CHY, CL, CLG, CLGF, CLHF, CLY, CY,...
    printBDXAddrOperand(MI, 1, O); 
    return;
    break;
  case 14:
    // CDLFBR, CDLGBR, CELFBR, CELGBR, CFDBR, CFEBR, CFXBR, CGDBR, CGEBR, CGX...
    printU4ImmOperand(MI, 1, O); 
    SStream_concat0(O, ", "); 
    printOperand(MI, 2, O); 
    break;
  case 15:
    // CFI, CGFI, CIH, LGFI
    printS32ImmOperand(MI, 1, O); 
    return;
    break;
  case 16:
    // CGHI, CHI, LGHI, LHI
    printS16ImmOperand(MI, 1, O); 
    return;
    break;
  case 17:
    // CGRJ, CLGRJ, CLRJ, CRJ
    SStream_concat0(O, ", "); 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 18:
    // CLFI, CLGFI, CLIH, IIHF, IILF, LLIHF, LLILF
    printU32ImmOperand(MI, 1, O); 
    return;
    break;
  case 19:
    // EAR
    printAccessRegOperand(MI, 1, O); 
    return;
    break;
  case 20:
    // IIHH, IIHL, IILH, IILL, NIHH, NIHL, NILH, NILL, OIHH, OIHL, OILH, OILL
    printU16ImmOperand(MI, 2, O); 
    return;
    break;
  case 21:
    // LLIHH, LLIHL, LLILH, LLILL, TMHH, TMHL, TMLH, TMLL
    printU16ImmOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 3 encoded into 2 bits for 4 unique commands.
  //printf("Frag-3: %"PRIu64"\n", (Bits >> 25) & 3);
  switch ((Bits >> 25) & 3) {
  default:   // unreachable.
  case 0:
    // ADBR, AEBR, AGFR, AGR, ALCGR, ALCR, ALGFR, ALGR, ALR, AR, AXBR, AsmELO...
    return;
    break;
  case 1:
    // AGHIK, AGRK, AHIK, ALGHSIK, ALGRK, ALHSIK, ALRK, ARK, AsmCGRJ, AsmCLGR...
    SStream_concat0(O, ", "); 
    break;
  case 2:
    // AsmCGIJ, AsmCIJ, AsmCLGIJ, AsmCLIJ
    printU4ImmOperand(MI, 2, O); 
    SStream_concat0(O, ", "); 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 3:
    // AsmJEAltCGI, AsmJEAltCI, AsmJEAltCLGI, AsmJEAltCLI, AsmJECGI, AsmJECI,...
    printPCRelOperand(MI, 2, O); 
    return;
    break;
  }


  // Fragment 4 encoded into 4 bits for 11 unique commands.
  //printf("Frag-4: %"PRIu64"\n", (Bits >> 27) & 15);
  switch ((Bits >> 27) & 15) {
  default:   // unreachable.
  case 0:
    // AGHIK, AHIK, ALGHSIK, ALHSIK
    printS16ImmOperand(MI, 2, O); 
    return;
    break;
  case 1:
    // AGRK, ALGRK, ALRK, ARK, CPSDRdd, CPSDRds, CPSDRsd, CPSDRss, NGRK, NRK,...
    printOperand(MI, 2, O); 
    return;
    break;
  case 2:
    // AsmCGRJ, AsmCLGRJ, AsmCLRJ, AsmCRJ
    printU4ImmOperand(MI, 2, O); 
    SStream_concat0(O, ", "); 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 3:
    // AsmJEAltCGR, AsmJEAltCLGR, AsmJEAltCLR, AsmJEAltCR, AsmJECGR, AsmJECLG...
    printPCRelOperand(MI, 2, O); 
    return;
    break;
  case 4:
    // AsmLOC, AsmLOCG
    printU4ImmOperand(MI, 4, O); 
    return;
    break;
  case 5:
    // AsmLOCGR, AsmLOCR, AsmSTOC, AsmSTOCG, CDLFBR, CDLGBR, CELFBR, CELGBR, ...
    printU4ImmOperand(MI, 3, O); 
    return;
    break;
  case 6:
    // CS, CSG, CSY
    printBDAddrOperand(MI, 3, O); 
    return;
    break;
  case 7:
    // LAA, LAAG, LAAL, LAALG, LAN, LANG, LAO, LAOG, LAX, LAXG, LMG, RLL, RLL...
    printBDAddrOperand(MI, 2, O); 
    return;
    break;
  case 8:
    // MADB, MAEB, MSDB, MSEB
    printBDXAddrOperand(MI, 3, O); 
    return;
    break;
  case 9:
    // MADBR, MAEBR, MSDBR, MSEBR
    printOperand(MI, 3, O); 
    return;
    break;
  case 10:
    // RISBG, RISBG32, RISBHG, RISBLG, RNSBG, ROSBG, RXSBG
    printU8ImmOperand(MI, 3, O); 
    SStream_concat0(O, ", "); 
    printU8ImmOperand(MI, 4, O); 
    SStream_concat0(O, ", "); 
    printU6ImmOperand(MI, 5, O); 
    return;
    break;
  }
}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
static const char *getRegisterName(unsigned RegNo)
{
  // assert(RegNo && RegNo < 119 && "Invalid register number!");

#ifndef CAPSTONE_DIET
  static const char AsmStrs[] = {
  /* 0 */ 'f', '1', '0', 0,
  /* 4 */ 'r', '1', '0', 0,
  /* 8 */ 'f', '0', 0,
  /* 11 */ 'r', '0', 0,
  /* 14 */ 'f', '1', '1', 0,
  /* 18 */ 'r', '1', '1', 0,
  /* 22 */ 'f', '1', 0,
  /* 25 */ 'r', '1', 0,
  /* 28 */ 'f', '1', '2', 0,
  /* 32 */ 'r', '1', '2', 0,
  /* 36 */ 'f', '2', 0,
  /* 39 */ 'r', '2', 0,
  /* 42 */ 'f', '1', '3', 0,
  /* 46 */ 'r', '1', '3', 0,
  /* 50 */ 'f', '3', 0,
  /* 53 */ 'r', '3', 0,
  /* 56 */ 'f', '1', '4', 0,
  /* 60 */ 'r', '1', '4', 0,
  /* 64 */ 'f', '4', 0,
  /* 67 */ 'r', '4', 0,
  /* 70 */ 'f', '1', '5', 0,
  /* 74 */ 'r', '1', '5', 0,
  /* 78 */ 'f', '5', 0,
  /* 81 */ 'r', '5', 0,
  /* 84 */ 'f', '6', 0,
  /* 87 */ 'r', '6', 0,
  /* 90 */ 'f', '7', 0,
  /* 93 */ 'r', '7', 0,
  /* 96 */ 'f', '8', 0,
  /* 99 */ 'r', '8', 0,
  /* 102 */ 'f', '9', 0,
  /* 105 */ 'r', '9', 0,
  /* 108 */ 'c', 'c', 0,
  };

  static const uint32_t RegAsmOffset[] = {
    108, 8, 22, 36, 50, 64, 78, 84, 90, 96, 102, 0, 14, 28, 
    42, 56, 70, 8, 22, 64, 78, 96, 102, 28, 42, 8, 22, 36, 
    50, 64, 78, 84, 90, 96, 102, 0, 14, 28, 42, 56, 70, 11, 
    25, 39, 53, 67, 81, 87, 93, 99, 105, 4, 18, 32, 46, 60, 
    74, 11, 25, 39, 53, 67, 81, 87, 93, 99, 105, 4, 18, 32, 
    46, 60, 74, 11, 25, 39, 53, 67, 81, 87, 93, 99, 105, 4, 
    18, 32, 46, 60, 74, 11, 39, 67, 87, 99, 4, 32, 60, 
  };

  //int i;
  //for (i = 0; i < sizeof(RegAsmOffset)/4; i++)
  //     printf("%s = %u\n", AsmStrs+RegAsmOffset[i], i + 1);
  //printf("*************************\n");
  return AsmStrs+RegAsmOffset[RegNo-1];
#else
  return NULL;
#endif
}
